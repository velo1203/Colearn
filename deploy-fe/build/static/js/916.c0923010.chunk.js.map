{"version":3,"file":"static/js/916.c0923010.chunk.js","mappings":"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","sources":["webpack://frontend/./src/problem_page/Problem.module.css?a519","webpack://frontend/./src/problem_page/component/css/searchbox.module.css?4db2","problem_page/component/searchbox.js","problem_page/component/viewoption.js","webpack://frontend/./src/problem_page/component/css/problemlist.module.css?201e","problem_page/component/problemlist.js","problem_page/Problem.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"pbHeader\":\"Problem_pbHeader__K1m5Z\",\"pbContainer\":\"Problem_pbContainer__IN-ra\"};","// extracted by mini-css-extract-plugin\nexport default {\"headerSearchbox\":\"searchbox_headerSearchbox__oJVpN\",\"searchInput\":\"searchbox_searchInput__6kWDz\",\"searchIcon\":\"searchbox_searchIcon__NacT4\",\"searchCategory\":\"searchbox_searchCategory__3RPGj\",\"searchForm\":\"searchbox_searchForm__P25fD\"};","import {useState, useEffect } from 'react';\r\nimport styles from './css/searchbox.module.css'\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSearch, faPlusCircle} from \"@fortawesome/free-solid-svg-icons\";\r\nfunction Searchbox(props) {\r\n    const [showCategories, setShowCategories] = useState(false);\r\n    const [selectedCategory, setSelectedCategory] = useState(null);\r\n\r\n    const toggleCategories = () => {\r\n        setShowCategories(!showCategories);\r\n    };\r\n\r\n    const handleCategoryClick = (category) => {\r\n        if (selectedCategory && selectedCategory.id === category.id) {\r\n            setSelectedCategory(null);\r\n        } else {\r\n            setSelectedCategory(category);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const handleClickOutside = (e) => {\r\n            if (showCategories && e.target.closest(`.${styles.categoryContainer}`) === null) {\r\n                setShowCategories(false);\r\n            }\r\n        };\r\n    \r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, [showCategories]);\r\n\r\n    const categoryItems = [\r\n        {\r\n            id: 1,\r\n            name: '어려움',\r\n            color: '#FFABAB'\r\n        }, {\r\n            id: 2,\r\n            name: '보통',\r\n            color: '#FDFFAB'\r\n        }, {\r\n            id: 3,\r\n            name: '쉬움',\r\n            color: '#CBFFAB'\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <div className={styles.headerSearchbox}>\r\n            <h1>{props.ic_book} 파이썬 기본 문제</h1>\r\n            <div className={styles.headerSearch}>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Searchbox;","import styles from './css/viewoption.module.css'\r\nimport { useState } from 'react';\r\n\r\nfunction Viewoption({selectedOption,setSelectedOption}) {\r\n\r\n    const options = [\r\n      {\r\n        id: 1,\r\n        label: '파이썬 기본 문제',\r\n      },\r\n      {\r\n        id: 2,\r\n        label: '사설 문제',\r\n      },\r\n    ];\r\n  \r\n    const handleOptionClick = (optionId) => {\r\n      setSelectedOption(optionId);\r\n    };\r\n  \r\n    return (\r\n      <ul className={styles.viewoptions}>\r\n        {options.map((option) => (\r\n          <li\r\n            key={option.id}\r\n            className={`${styles.viewoption} ${selectedOption === option.id ? styles['view-on'] : ''}`}\r\n            onClick={() => handleOptionClick(option.id)}\r\n          >\r\n            {option.label}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n}\r\n\r\nexport default Viewoption;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"noproblem\":\"problemlist_noproblem__uGOFj\",\"table\":\"problemlist_table__pxU48\",\"tableHead\":\"problemlist_tableHead__rynMw\",\"tableBody\":\"problemlist_tableBody__2fpHD\",\"tableTitle\":\"problemlist_tableTitle__iYZUC\",\"tableDescription\":\"problemlist_tableDescription__UVCQ1\",\"tableId\":\"problemlist_tableId__VrKRr\",\"solvedBadge\":\"problemlist_solvedBadge__kS7+8\"};","import { useNavigate } from 'react-router-dom';\r\nimport styles from './css/problemlist.module.css';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faBook, faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport useAuthStore from '../../authStore';\r\nimport { useEffect ,useState} from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Problemlist(props) {\r\n  const { problemlist } = props;\r\n  const { isLoggedIn, role } = useAuthStore();\r\n  const [solvedProblems, setSolvedProblems] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    if (isLoggedIn) { // 로그인 상태일 경우만 요청 수행\r\n      axios.get(`http://localhost:5000/user/info`,{withCredentials:true})\r\n        .then((response) => {\r\n          var solved_problem = response.data.user_info.solved_problem;\r\n          setSolvedProblems(solved_problem); // 받아온 데이터를 solvedProblems 상태에 저장\r\n        })\r\n        .catch(() => {\r\n          console.log(\"Failed to fetch solved problem list.\");\r\n        });\r\n    }\r\n  }, [isLoggedIn]); // isLoggedIn 의존성 추가\r\n  console.log(problemlist)\r\n  const sortedProblemlist = [...problemlist].sort((a, b) => a.order - b.order);\r\n\r\n  return (\r\n    <div>\r\n      {problemlist.length === 0 ? (\r\n        <p className={styles.noproblem}>문제가 없습니다</p>\r\n      ) : (\r\n        <table className={styles.table}>\r\n          <colgroup>\r\n            <col style={{ width: '25%' }} />\r\n            <col style={{ width: '55%' }} />\r\n            <col style={{ width: '20%' }} />\r\n          </colgroup>\r\n          <thead className={styles.tableHead}>\r\n            <tr>\r\n              <th>문제 이름/아이디</th>\r\n              <th>문제 설명</th>\r\n              <th>아이디</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className={styles.tableBody}>\r\n            {sortedProblemlist.map((row, index) => (\r\n              <TableRow key={index} i={index} rowData={row} solvedProblems={solvedProblems} /> // solvedProblems를 TableRow에 전달\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TableRow({ i ,rowData, solvedProblems }) {\r\n  const navigate = useNavigate();\r\n\r\n  const handleRowClick = () => {\r\n    navigate('/codespace/' + rowData.id);\r\n  };\r\n  const solved = solvedProblems && solvedProblems.includes(rowData.id);\r\n  return (\r\n    <tr>\r\n      <td className={styles.tableTitle} onClick={handleRowClick}>\r\n        <FontAwesomeIcon icon={faBook}/> {i + 1}. {rowData.title} {solved && <FontAwesomeIcon icon={faCheckCircle} className={styles.solvedBadge}/>}\r\n      </td>\r\n      <td className={styles.tableDescription}>{rowData.description}</td>\r\n      <td className={styles.tableId}>{rowData.id}</td>\r\n    </tr>\r\n  );\r\n}\r\n\r\n\r\nexport default Problemlist;","import styles from './Problem.module.css'\r\nimport Searchbox from './component/searchbox';\r\nimport Viewoption from './component/viewoption';\r\nimport Problemlist from './component/problemlist';\r\nimport { useState,useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ProblemPage() {\r\n    const [problemlist, setProblemlist] = useState([]);\r\n    const [selectedOption, setSelectedOption] = useState(1);\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:5000/user/show_problemlist`)\r\n          .then((response) => {\r\n            setProblemlist(response.data);\r\n          })\r\n          .catch(() => {\r\n            console.log('문제가 없습니다')\r\n            setProblemlist([]);\r\n          });\r\n      }, [selectedOption]);\r\n      \r\n\r\n    return (\r\n        <div className={styles.problempage}>\r\n            <div className={styles.pbHeader}>\r\n                <div className={styles.pbContainer}>\r\n                    <Searchbox/>\r\n                    {/* <Viewoption selectedOption={selectedOption} setSelectedOption={setSelectedOption}/> */}\r\n                </div>\r\n            </div>\r\n            <div className={styles.pbContainer}>\r\n            <Problemlist problemlist={problemlist} />\r\n            </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default ProblemPage;"],"names":["props","_useState","useState","_useState2","_slicedToArray","showCategories","setShowCategories","_useState3","_useState4","useEffect","handleClickOutside","e","target","closest","concat","styles","document","addEventListener","removeEventListener","_jsxs","className","children","ic_book","_jsx","TableRow","_ref","i","rowData","solvedProblems","navigate","useNavigate","solved","includes","id","onClick","FontAwesomeIcon","icon","faBook","title","faCheckCircle","description","problemlist","_useAuthStore","useAuthStore","isLoggedIn","role","setSolvedProblems","axios","withCredentials","then","response","solved_problem","data","user_info","catch","console","log","sortedProblemlist","_toConsumableArray","sort","a","b","order","length","style","width","map","row","index","setProblemlist","selectedOption","Searchbox","Problemlist"],"sourceRoot":""}